# Generated by Django 3.2.24 on 2024-03-21 17:10

from django.db import migrations
from faker import Faker
from random import randint as rINT
from random import choice
from django.db import models
def forwards_func(apps, schema_editor):
    Teacher = apps.get_model('mainapp', 'CourseTeachers')
    Course = apps.get_model('mainapp', 'Courses')
    faker_ = Faker('ru-RU')
    id_inc = 1
    courses_list = [Course.objects.get(id=i) for i in range(1,len(Course.objects.all())+1)]
    for i in range(5):
        db = faker_.date_of_birth()
        teacher = Teacher.objects.create(
        id = id_inc,
        name_teacher = faker_.first_name_male(),
        surname_teacher = faker_.last_name_male(),
        day_birth = f'{db.year}-{db.month}-{db.day}'
        )
        range_courses = 2 if len(courses_list) > 1 else 1
        teacher.course.set([courses_list.pop(courses_list.index(choice(courses_list))) for _ in range(range_courses)])
        id_inc += 1

# def forwards_func_intermediate_model(apps, schema_editor):
#     Teacher = apps.get_model('mainapp', 'CourseTeachers')
#     Course = apps.get_model('mainapp', 'CourseTeachers') #имеются
#     class Intermediate(models.Model):
#         teacher_inter = models.ForeignKey(Teacher, models.CASCADE)
#         course_inter = models.ForeignKey(Course, models.CASCADE)

    #1) создать в модели промежуточную модель
    #2) сделать миграцию, а преподов заполнить как обычно

    # faker_ = Faker('ru-RU')
    #
    # for i in range(1, 3):
    #     db = faker_.date_of_birth()
    #     teacher = Teacher.objects.create(
    #         id = i,
    #         name_teacher = faker_.first_name_male(),
    #         surname_teacher = faker_.last_name_male(),
    #         day_birth = f'{db.year}-{db.month}-{db.day}'
    #     )
    #     Intermediate(
    #         teacher_inter=teacher,
    #         course_inter=Course.objects.get(id=rINT(1, 9))
    #     )




def reverse_func(apps, schema_editor):

    Teacher = apps.get_model('mainapp', 'CourseTeachers')
    Teacher.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('mainapp', '0005_migration_for_lessons'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func)
    ]
